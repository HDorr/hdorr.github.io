<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vue on 喜欢养狗,不爱洗头!</title>
    <link>https://hdorr.github.io/tags/vue/</link>
    <description>Recent content in vue on 喜欢养狗,不爱洗头!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2018</copyright>
    <lastBuildDate>Sat, 27 Jul 2019 17:02:37 +0800</lastBuildDate>
    
	<atom:link href="https://hdorr.github.io/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Promise在异步调用时的使用场景</title>
      <link>https://hdorr.github.io/post/%E5%89%8D%E7%AB%AF/es6/promise%E5%9C%A8%E5%BC%82%E6%AD%A5%E8%B0%83%E7%94%A8%E6%97%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/</link>
      <pubDate>Sat, 27 Jul 2019 17:02:37 +0800</pubDate>
      
      <guid>https://hdorr.github.io/post/%E5%89%8D%E7%AB%AF/es6/promise%E5%9C%A8%E5%BC%82%E6%AD%A5%E8%B0%83%E7%94%A8%E6%97%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/</guid>
      <description>下面基于,前端要调用接口删除图片的环境背景下,说明为了实现删除成功图片消失,删除失败图片不会消失的实现过程` 用到ES6中的promise语法
promise异步调用** 在handleRemove方法调用删除图片的api方法，删除成功时return true，删除失败时return false;
//删除图片 handleRemove(file, fileList) { console.log(file) // alert(&#39;删除&#39;) // return true; //删除图片 courseApi.deleteCoursePic(&#39;1&#39;).then((res) =&amp;gt; { if(res.success){ this.$message.success(&#39;删除成功&#39;); return true; }else{ this.$message.error(res.message); return false; } }); },  在上边代码中将提交的课程id故意写错，按照我们预期应该是删除失败，而测试结果却是图片在页面上删除成功。
问题原因：
通过查询deleteCoursePic方法的底层代码，deleteCoursePic最终返回一个promise对象。
Promise是ES6提供的用于异步处理的对象，因为axios提交是异步提交，这里使用promise作为返回值。
Promise的使用方法如下：
Promise对象在处理过程中有三种状态：
pending：进行中
resolved：操作成功
rejected: 操作失败
Promise的构建方法如下：
const promise = new Promise(function(resolve,reject){ //...TODO... if(操作成功){ resolve(value); }else{ reject(error); } })  上边的构造方法function(resolve,reject)执行流程如下：
1）方法执行一些业务逻辑。
2）如果操作成功将Promise的状态由pending变为resolved，并将操作结果传出去
3）如果操作失败会将promise的状态由pending变为rejected，并将失败结果传出去。
上边说的操作成功将操作结果传给谁了呢？操作失败将失败结果传给谁了呢？
通过promise的then、catch来指定
promise.then(function (result) { console.log(&#39;操作成功：&#39; + result); }); promise.</description>
    </item>
    
  </channel>
</rss>